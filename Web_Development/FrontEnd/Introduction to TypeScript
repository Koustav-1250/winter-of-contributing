

TypeScript in five Steps
========================

**How to Install TypeScript?**

*   npm install -g typescript
*   Your file should be XYZ.**ts** (ts-> typescript extension)
*   **tsc XYZ.ts** to run your file. It will automatically create a javascript file XYZ.js which can be render by browser as browser doesn't render TypeScript file.You can google definetly if have any issue.

  
**1)What is TypeScript?**

*   TypeScript is advance version of JavaScript
*   TypeScript allows you to define the datatype you want to assign for any variable.
*   It allows you to use concept of Classes and Interfaces same as any other languages like Java,C++.

  
**2)Variables in TypesScript**

*   You can create any varaible using let,const and var same as JavaScript.But the recommended use is of let and const.
  
*   You can assign datatype to your variable.  
    \-> We can assign only number datatype on variable  
    Ex: let myVar:`number`; **myVar**  
    \-> You can also assign return type to a function let fun=(a: `string` , b: `number`)=>number;

**4)Aliases in TypeScript**

*   Aliases in TypeScript allows you to make short name for any type.  
    For ex: **type data= `string|number`**  
    so now you can use this type data at the place of **string|number**. Ex: let age:string|number; also can be written as **let age:data**;  
      
    Similarly, you can use the aliases to create short name or type for an object which is frequently used in your code.

**3)Access Modifiers in TypeScript**

*   TypeScript allows you to use access modifiers so that you can make your code more secure and restrict the accessibility your program.  
    For ex:  
    **public** name;  
    **private** NetWroth;  
    **readonly** Biography;

**5)Interface in TypeScript**

*   You can create an Interface in TypeScript same as other object oriented language.  
    For ex: interface Parent{ private client:string; readonly details:string; getInfo():void; }
*   You can implements this **Parent Interface** in any class.  
    For ex: class Child implements Parent{ //compulsory to implement the methods of Parent Interface. getInfo(){ console.log("In Child Class"); } }
